// [ By Hiudy ] -- ES

module.exports = {
  // config.js || By Hiudy
  invalid_prefix: "‚ùå El prefijo debe tener exactamente 1 car√°cter.",
  invalid_number: "‚ùå El n√∫mero debe contener solo d√≠gitos (10-15 caracteres).",
  example_number: "Ejemplo: 553399285117 (sin s√≠mbolos ni espacios)",
  invalid_language: (valid) => `‚ùå Idioma inv√°lido, los idiomas son: ${valid.join(',')}`,
  config_cancelled: "üõë Operaci√≥n cancelada por el usuario.",
  installing_dependencies: "üì¶ Instalando dependencias...",
  install_complete: "‚úî Instalaci√≥n completada. Ejecuta 'npm start' para iniciar el bot.",
  install_error: (message) => `‚ùå Error en la instalaci√≥n: ${message}`,
  manual_install_info: "‚ÑπÔ∏è Puedes intentar instalar manualmente con: npm install --force --no-bin-links",
  config_welcome: (version) => `üîß Configurador de Nazuna - v${version}`,
  creator_message: "üöÄ Creado por Hiudy",
  existing_config_loaded: "‚ÑπÔ∏è Configuraci√≥n existente cargada.",
  error_reading_config: (message) => `‚ö† Error al leer la configuraci√≥n existente: ${message}`,
  using_default_values: "‚ÑπÔ∏è Usando valores predeterminados.",
  basic_config_title: "CONFIGURACI√ìN B√ÅSICA",
  ask_owner_name: "üë§ ¬øCu√°l es tu nombre?",
  ask_owner_number: "üìû ¬øCu√°l es tu n√∫mero (solo d√≠gitos, 10-15)?",
  ask_bot_name: "ü§ñ ¬øCu√°l es el nombre del bot?",
  ask_prefix: "‚öôÔ∏è ¬øCu√°l es el prefijo (1 car√°cter)?",
  ask_language: "‚öíÔ∏è ¬øCu√°l es el idioma del bot? (pt, en, es, id, fr)",
  config_summary: "üìã Resumen de la configuraci√≥n:",
  owner_name_summary: (name) => `Nombre del due√±o: ${name}`,
  owner_number_summary: (number) => `N√∫mero del due√±o: ${number}`,
  bot_name_summary: (name) => `Nombre del bot: ${name}`,
  prefix_summary: (prefix) => `Prefijo del bot: ${prefix}`,
  language_summary: (lang) => `Idioma del bot: ${lang}`,
  config_saved_success: "üéâ Configuraci√≥n completada con √©xito.",
  ask_install_deps: "üì¶ ¬øInstalar dependencias ahora?",
  install_later_info: "‚ö° Para instalar despu√©s, usa: npm run config:install",
  nazuna_ready: (version) => `üöÄ Nazuna lista para usar! - v${version}`,
  error_saving_config: (message) => `‚ùå Error al guardar la configuraci√≥n: ${message}`,
  unexpected_error: (message) => `‚ùå Error inesperado: ${message}`,
  prompt_input_current: (value) => `(Actual: ${value || 'No definido'})`,
  fatal_error: (message) => `‚ùå Error fatal: ${message}`,
  
  // start.js || By Hiudy
  shutting_down: "üõë Apagando el bot...",
  starter_header: "üöÄ Iniciador de Nazuna üöÄ",
  starter_version: (version) => `üîß Creado por Hiudy - Versi√≥n: ${version} üîß`,
  config_not_found: "‚ö† ¬°Opa! Parece que a√∫n no has configurado el bot.",
  run_config_command: (command) => `üîπ Para configurar, ejecuta: ${command}`,
  modules_not_found: "‚ö† ¬°Opa! Parece que los m√≥dulos a√∫n no han sido instalados.",
  run_install_command: (command) => `üì¶ Para instalar, ejecuta: ${command}`,
  connection_file_not_found: (file) => `‚ö† Archivo de conexi√≥n no encontrado: ${file}`,
  check_installation: "Verifica si el bot fue instalado correctamente.",
  starting_with_code: (dualMode) => `üöÄ Iniciando el bot con c√≥digo${dualMode ? ' (modo dual)' : ''}...`,
  starting_with_qrcode: (dualMode) => `üöÄ Iniciando el bot con QR Code${dualMode ? ' (modo dual)' : ''}...`,
  error_starting_process: (message) => `‚ùå Error al iniciar el proceso: ${message}`,
  bot_crashed: (code) => `‚ö† El bot se ha detenido con c√≥digo: ${code}`,
  many_restarts: (count, seconds) => `‚ö† Demasiados reinicios (${count}). Esperando ${seconds} segundos...`,
  restarting_bot: (seconds) => `‚ö† El bot se ha detenido. Reiniciando en ${seconds} segundos...`,
  error_checking_qr: (message) => `‚ùå Error al verificar el directorio QR Code: ${message}`,
  ask_connection_method: "üîó ¬øC√≥mo deseas conectar el bot?",
  qr_code_connection: "1. Conexi√≥n por QR Code",
  code_connection: "2. Conexi√≥n por C√≥digo",
  exit_option: "3. Salir",
  choose_option: "Elige una opci√≥n (1/2/3): ",
  starting_qr_connection: "üì° Iniciando conexi√≥n por QR Code...",
  starting_code_connection: "üîë Iniciando conexi√≥n por C√≥digo...",
  exiting: "üëã Saliendo...",
  invalid_option_qr_default: "‚ùå Opci√≥n inv√°lida. Usando QR Code como predeterminado.",
  qr_detected_auto_connect: "üì° QR Code ya detectado. Iniciando conexi√≥n autom√°tica...",

  // update.js || By Hiudy
  updater_header: "Actualizador de Nazuna",
  checking_requirements: "Verificando los requisitos previos...",
  git_found: "‚úî Git encontrado.",
  git_not_found: "‚ùå Git no fue encontrado. Git es necesario para continuar.",
  git_download_win: "‚ÑπÔ∏è Descarga e instala Git para Windows en: https://git-scm.com/download/win",
  git_install_mac: "‚ÑπÔ∏è Instala Git en macOS mediante Homebrew ('brew install git') o Xcode Command Line Tools.",
  git_install_linux: "‚ÑπÔ∏è Instala Git en Linux usando el administrador de paquetes de tu distribuci√≥n (ej: 'sudo apt-get install git').",
  npm_found: "‚úî NPM encontrado.",
  npm_not_found: "‚ùå NPM no fue encontrado. NPM es necesario para instalar las dependencias.",
  npm_download: "‚ÑπÔ∏è NPM viene con Node.js. Descarga e instala en: https://nodejs.org/",
  requirements_met: "‚úî Todos los requisitos previos fueron cumplidos.",
  update_warning: "ATENCI√ìN: Este proceso reemplazar√° los archivos actuales del bot por la versi√≥n m√°s reciente.",
  backup_info: "‚ÑπÔ∏è Se crear√° un respaldo autom√°tico de 'config.json', 'database' y 'medios'.",
  cancel_info: "Puedes cancelar en cualquier momento presionando CTRL+C.",
  starting_in: (countdown) => `Iniciando la actualizaci√≥n en ${countdown} segundos...`,
  proceeding_with_update: "üöÄ Procediendo con la actualizaci√≥n...",
  creating_backup: "üì¶ Creando respaldo de tus datos...",
  copying_database: "Copiando base de datos...",
  copying_config: "Copiando archivo de configuraci√≥n...",
  copying_media: "Copiando archivos de medios...",
  backup_saved_at: (dir) => `‚úî Respaldo guardado con √©xito en: ${dir}`,
  error_creating_backup: (msg) => `‚ùå Error al crear el respaldo: ${msg}`,
  downloading_latest_version: "üì• Descargando la versi√≥n m√°s reciente del repositorio...",
  cloning_repo: "Clonando repositorio...",
  downloading: "Descargando...",
  download_complete: "‚úî Descarga completada.",
  failed_to_download: (msg) => `‚ùå Fallo al descargar la actualizaci√≥n: ${msg}`,
  checking_github_connectivity: "Verificando conectividad con GitHub...",
  permission_or_git_config_error: "Podr√≠a ser un error de permisos o configuraci√≥n de Git. Intenta ejecutar el terminal como administrador.",
  internet_connection_error: "Parece ser un problema de conexi√≥n a internet.",
  cleaning_old_files: "üßπ Limpiando archivos antiguos...",
  removing_git_dir: "Eliminando directorio .git antiguo...",
  removing_package_json: "Eliminando package.json antiguo...",
  removing_package_lock: "Eliminando package-lock.json antiguo...",
  cleaning_data_dir: "Limpiando directorio de datos (excepto respaldos)...",
  cleaning_complete: "‚úî Limpieza completada.",
  error_cleaning_files: (msg) => `‚ùå Error al limpiar archivos antiguos: ${msg}`,
  applying_update: "‚¨ÜÔ∏è Aplicando la actualizaci√≥n...",
  copying_dir: (dir) => `Copiando directorio: ${dir}`,
  files_copied: (copied, total) => `Archivos copiados: ${copied} de ${total}`,
  update_applied_success: "‚úî Actualizaci√≥n aplicada con √©xito.",
  error_applying_update: (msg) => `‚ùå Error al aplicar la actualizaci√≥n: ${msg}`,
  restoring_backup: "üóÇÔ∏è Restaurando el respaldo...",
  restoring_database: "Restaurando base de datos...",
  restoring_config: "Restaurando archivo de configuraci√≥n...",
  restoring_media: "Restaurando archivos de medios...",
  restore_success: "‚úî Respaldo restaurado con √©xito.",
  error_restoring_backup: (msg) => `‚ùå Error al restaurar el respaldo: ${msg}`,
  installing_deps: "üì¶ Instalando nuevas dependencias...",
  deps_installed_success: "‚úî Dependencias instaladas con √©xito.",
  failed_to_install_deps: (msg) => `‚ùå Fallo al instalar dependencias: ${msg}`,
  manual_install_prompt: "Intenta instalar manualmente con 'npm install'.",
  finishing_up: "‚ú® Finalizando...",
  removing_backup_dir: "Eliminando directorio de respaldo temporal...",
  backup_removed: "Respaldo temporal eliminado.",
  error_cleaning_temp_files: (msg) => `‚ùå Error al limpiar archivos temporales: ${msg}`,
  progress: (completed, total) => `Progreso: [${completed}/${total}]`,
  fetching_commit_info: "üîç Buscando informaci√≥n de la √∫ltima actualizaci√≥n...",
  error_fetching_commits: (status) => `‚ùå Error al buscar informaci√≥n de commit: ${status}`,
  update_complete_success: "üéâ Actualizaci√≥n completada con √©xito.",
  start_bot_prompt: "Ya puedes iniciar el bot con 'npm start'.",
  error_during_update: (msg) => `‚ùå Ocurri√≥ un error cr√≠tico durante la actualizaci√≥n: ${msg}`,
  backup_location_info: (dir) => `‚ÑπÔ∏è Tus datos importantes (config, database, medios) fueron guardados en: ${dir}`,
  manual_restore_info: "Puedes restaurarlos manualmente moviendo los archivos de la carpeta de respaldo a la carpeta 'datos'.",
  contact_dev_for_help: "Si el problema persiste, contacta al desarrollador."
};